---
title: "How reporting fatigue manifests within the COVIMOD survey"
format:
  pdf:
    toc: true
    number-sections: false
    colorlinks: true
---

```{r message=FALSE, warning=FALSE, echo=FALSE}
# Load library
library(tidyverse)
library(patchwork)
library(kableExtra)
library(cmdstanr)
library(brms)

# Custom helper functions
source("../R/make_design_matrix.R")

# Color palette
ic_color_palette <- c("#00548F", "#7244E5", "#CC3DC7", "#CC3D5C", "#CC893D", "#A3CC3D", "#3DCC41", "#3DCCAD")
```

```{r, echo=FALSE}
# Load data
covimod_data <- read_rds("../data/COVIMOD/COVIMOD_data_2022-12-29.rds")

# Unpack data
dt_part <- covimod_data$part
dt_nhh <- covimod_data$nhh
dt_hh <- covimod_data$hh
dt_pop <- covimod_data$pop
```

## Background
To gain a picture of what reporting fatigue looks like, and also to assess if statistical models can adjust for it we want to analyse wave 4 of COVIMOD because 57.7% of its participants are first time participants, which means we have a balanced sample (in terms of sample size) of those with no fatigue and those who may have fatigue.

## Basic Exploratory Analysis
### Characteristics of first-time and repeating participants
```{r echo=FALSE}
# Participants in wave 4
dt_part_w4 <- dt_part %>% filter(wave == 4)

# Participants in wave 4 who participated before wave 4
ids_part_w4 <- dt_part_w4 %>% pull(new_id) %>% unique()
ids_part_w1t4 <- dt_part %>% filter(wave < 4) %>% pull(new_id) %>% unique()
ids_part_rep <- intersect(ids_part_w4, ids_part_w1t4)

dt_part_w4 <- dt_part_w4 %>% mutate(rep = ifelse(new_id %in% ids_part_rep, TRUE, FALSE))
```

#### Age distribution
The plot below shows the age distribution of participant in wave 4, coloured by whether they are participating for the first time or second plus times. 
```{r, echo=FALSE, warning=FALSE}
ggplot(dt_part_w4, aes(age, y = ..density..)) +
  geom_histogram(aes(fill = rep), alpha = 0.2) +
  geom_density(aes(color = rep), linewidth = 1) +
  ggsci::scale_color_d3() +
  ggsci::scale_fill_d3() +
  labs(x = "Participant age", y = "Density", fill = "Repeating", color = "Repeating") +
  theme_bw() +
  theme(
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 7),
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    legend.position = c(0.2, 0.8),
    legend.key.size = unit(0.3, "cm"),
    legend.background = element_blank()
  ) +
  guides(
    color = guide_legend(override.aes = list(size = 0.1)), # Adjust line size in legend
    fill = guide_legend(override.aes = list(alpha = 0.1, size = 0.1)) # Adjust transparency for fill
  )

ggsave("../figures/wave4-age-dist.pdf", width = 7.13, height = 6, units = "cm", dpi = 300)
```
**Observations**

From the kernel density estimates, it seems like the newly recruited participants are younger than the repeating participants.

#### Gender proportions
```{r message=FALSE, echo=FALSE}
tmp <- dt_part_w4 %>% 
  drop_na(gender) %>%
  group_by(rep, gender) %>% 
  summarise(n = n()) %>%
  ungroup(gender) %>%
  mutate(percentage = round(n/sum(n), 2)*100)

kable(tmp)

ggplot(tmp, aes(rep, percentage)) +
  geom_bar(stat = "identity", aes(fill = gender), width = 0.3) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  ggsci::scale_fill_lancet() +
  ggsci::scale_color_lancet() +
  labs(x = "Repeating", y = "Percentage") +
  theme_bw() +
  theme(
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 7),
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    legend.key.size = unit(0.3, "cm"),
    legend.background = element_blank(),
    legend.margin = margin(l = -0.2, unit = "cm")
  )

ggsave("../figures/wave4-gender-dist.pdf", width = 7.13, height = 6, units = "cm", dpi = 300)
```
**Observations**

There are more men in the new participants, but in general there does not seem to be huge differences beween first time and repeating participants in terms of gender ratio

#### Household Size
The table below shows the proportion of household sizes of first-time and repeating participants.
```{r echo=FALSE}
# Make table
tmp <- dt_part_w4 %>% 
  filter(hh_p_incl_0 <= 4) %>% 
  group_by(rep, hh_p_incl_0) %>%
  summarise(n = n()) %>% 
  ungroup(hh_p_incl_0) %>%
  mutate(prop = round(n/sum(n), 2)*100)

kable(tmp)
```

The plot below shows the distribution of household sizes for first time and repeating participants.
```{r, echo=FALSE}
# Plot stack bar plot
ggplot(tmp, aes(x = rep, y = prop, fill = ordered(hh_p_incl_0))) + 
  geom_bar(stat = "identity", width = 0.5) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  labs(x = "Repeating", y = "Proportion", fill = "Household\nsize") +
  theme_bw()

ggsave("../figures/wave4-hhsize-dist.pdf", units = "cm", width = 14.26, height = 12)
```
**Observations**

The majority of first-time participants are characterized by household sizes of two or three (66%). In contrast, the data reveals a significant prevalence of single-person households among repeating participants (45%). This could be due to the fact that household members moved out following the lift of contact reduction measures but because we are comparing results obtained at the same point in time, we should see a similar trend in both groups of people. This result could potentially be due to reporting fatigue, and suggests that it may manifest within household contact reports as well as non-household contact reports.

### Comparison of empirical contact intensities
```{r echo=FALSE}
# ========== Preprocessing Step ==========
# Calculate number of household contacts
dt_hh_cnt_w4 <- dt_hh %>% 
  filter(wave == 4) %>%
  group_by(new_id) %>%
  summarise(y_hh = sum(hh_met_this_day))

# Calculate the number of non-household contacts
dt_nhh_cnt_w4 <- dt_nhh %>% 
  filter(wave == 4) %>%
  group_by(new_id) %>%
  summarise(y_nhh = n())

# Merge contact data and participant data
dt_cnt_w4 <- dt_part_w4 %>% 
  left_join(dt_hh_cnt_w4, by = "new_id") %>%
  left_join(dt_nhh_cnt_w4, by = "new_id") %>%
  mutate(
    y_hh = ifelse(is.na(y_hh), 0, y_hh),
    y_nhh = ifelse(is.na(y_nhh), 0, y_nhh),
    y_grp = rowSums(across(Q75_u18_work:Q76_o64_else), na.rm = TRUE),
    y = y_hh + y_nhh,
    S = y / (y + y_grp),
    S = ifelse(is.nan(S), 1, S)
  )
```

#### House-hold contacts
```{r, echo=FALSE}
tmp <- dt_cnt_w4 %>% 
  group_by(rep, y_hh) %>%
  summarise(n = n()) %>%
  ungroup(y_hh) %>%
  mutate(p = round(n/sum(n)*100, 2))

ggplot(tmp, aes(y_hh, y = p)) +
  geom_bar(aes(fill = rep), stat = "identity", position = "dodge") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  ggsci::scale_fill_d3() +
  labs(x = "No. of household contacts",  y = "Percentage", fill = "Repeating") +
  theme_bw()

ggsave("../figures/empirical-hh-contacts.pdf", units = "cm", width = 14.26, height = 12)
```
**Observations**

Comparing the two groups, we can see that repeating participants are overwhelmingly more likely to have no household contacts (more than 50%). This is expected from the previous result of the comparison between the distribution of household sizes.

#### Non-household contacts
```{r echo=FALSE, message=FALSE}
tmp <- dt_cnt_w4 %>% 
  group_by(rep, y_nhh) %>%
  summarise(n = n()) %>%
  ungroup(y_nhh) %>%
  mutate(p = round(n/sum(n)*100, 2))

ggplot(filter(tmp, y_nhh < 20), aes(y_nhh, y = p)) +
  geom_bar(aes(fill = rep), stat = "identity", position = "dodge") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  ggsci::scale_fill_d3() +
  labs(x = "No. of non-household contacts",  y = "Percentage", fill = "Repeating") +
  theme_bw()

ggsave("../figures/empirical-nhh-contacts.pdf", units = "cm", width = 14.26, height = 12)
```
**Observations**

Comparing the two groups, we find that again, repeating participants are more likely to report no contacts. For those who do report contact with someone out side the house hold, the reporting pattern is not so different from first-time participants. This may suggest that those who are fatigued will not bother to report any contacts whereas those who reports answers the survey properly.

#### Group contacts
```{r echo=FALSE}
# Proportion of people who report group contacts
dt_cnt_w4 %>% 
  group_by(rep) %>%
  summarise(
    sample_size = n(),
    n_report_grp_cnt = sum(y_grp > 0),
    prop_report_grp_cnt = round(mean(y_grp > 0)*100, 2)
  ) %>%
  kable()
```
**Observations**

The table above shows the sample size, the number of participants who report group contacts, and the proportion of participants who report group contacts. Despite only a 35% increase in sample size, the number of people who report group contacts is more than triple for first-time participants, and the proportion who report group contacts is more than double (18.18% vs 7.62%).

#### Overall
##### Crude unweighted comparison
The table below shows the comparison of the crude sample mean between the two groups.
```{r, echo=FALSE}
dt_cnt_w4 %>%
  filter(S > 0, y_grp < 60) %>%
  group_by(rep) %>%
  summarise(
    N = n(),
    hh_contacts = mean(y_hh, na.rm = TRUE),
    nhh_contacts = mean(y_nhh, na.rm = TRUE),
    all_contacts = mean(y, na.rm = TRUE),
    all_contacts_grp_adj = mean(y/S, na.rm = TRUE)
  ) %>%
  mutate(across(hh_contacts:all_contacts_grp_adj, round, 2)) %>%
  kable()
```
Unsurprisingly, the average contact count is lower in the repeating participants on all fronts.

##### Adjusted comparison of the means
```{r echo=FALSE}
library(broom)

# Preprocessing
dt_cnt_w4 <- dt_cnt_w4 %>% 
  filter(S > 0, y_grp < 60) %>%
  mutate(
    hh_size = ifelse(hh_p_incl_0 <= 4, hh_p_incl_0, 4),
    hh_size = factor(hh_size)
  )
```

###### Household contacts
Let $Y_i^{hh}$ denote the number of household contacts reported by participant $i$. We assume that $Y_i^{hh}$ follows a Poisson distribution with rate $\lambda_i^{hh}$. We model the logarithm of $\lambda_i^{hh}$ as a linear function of participant age group, gender, and repeat:
$$
\begin{split}
Y_i^{hh} &\sim \text{Poisson}(\lambda_i^{hh}) \\
\log(\lambda_i^{hh}) &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir}
\end{split}
$$
Here, $\beta_c$ denotes the coefficient for age group $c \in \mathcal{C}/\text{0-4} = \{\text{5-9}, \text{10-14}, \ldots, \text{85+}\}$ and $D_{ic}$ is a dummy variable indicating whether participant $i$ falls within age group $c$. Similarly $\beta_F, \beta_r, D_{iF}, D_{ir}$ are coefficients and dummy variables for females and repeat respectively.

```{r, echo=FALSE}
# Household contacts
m_hh <- glm(y_hh ~ age_strata + gender + rep, data = dt_cnt_w4, family = poisson())
summary(m_hh)
```
**Observations**

Compared to first-time participants, repeating participants report $100 \times (1-\exp(\beta_r)) = 32$ percent fewer household contacts on average, after controlling for age group and gender.

> If we assume that the reported household sizes are not effected by reporting fatigue, then the repeat term in this model is confounded by household size. Hence, we test a model that includes household size below to see if it may be an omitted variable bias.

$$
\begin{split}
Y_i^{hh} &\sim \text{Poisson}(\lambda_i^{hh}) \\
\log(\lambda_i^{hh}) &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir} + \sum_{h=2}^4\beta_hD_{ih}
\end{split}
$$
```{r echo=FALSE}
# Household contacts
m_hh2 <- glm(y_hh ~ age_strata + gender + rep + hh_size, data = dt_cnt_w4, family = poisson())
kable(tidy(m_hh2))
```
We see that after adjusting for reporting fatigue, repeat status does not have an effect on the number of reported household contacts. This suggests that reporting fatigue may act on the reported number of household members but no on the reports of whether the participant met the household member that they reported present in the household.

## Regression Analysis
```{r}
dt_cnt_w4 <- read_rds("../data/silver/covimod-wave-4.rds")
```

### Household contacts
```{r}
# Baseline model (uninformative priors on the parameters)
m_hh_baseline <- brm(y_hh ~ age_strata + gender + hh_size + job + rep,
                    data = dt_cnt_w4,
                    family = poisson(),
                    prior = c(set_prior("normal(0, 5)")),
                    chains = 2)

# Weak shrinkage
m_hh_horseshoe_1 <- brm(y_hh ~ age_strata + gender + rep + hh_size + job,
                        data = dt_cnt_w4,
                        family = poisson(),
                        prior = c(set_prior("horseshoe(df = 1)")),
                        chains = 2)

# Medium shrinkage
m_hh_horseshoe_2 <- brm(y_hh ~ age_strata + gender + rep + hh_size + job,
                        data = dt_cnt_w4,
                        family = poisson(),
                        prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.93)")),
                        chains = 2)

# Strong shrinkage
m_hh_horseshoe_3 <- brm(y_hh ~ age_strata + gender + rep + hh_size + job,
                        data = dt_cnt_w4,
                        family = poisson(),
                        prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.03)")),
                        chains = 2)

# Summarise posterior quantities
m_hh_baseline_sum <- as.data.frame(posterior_summary(m_hh_baseline, probs = c(0.025, 0.975)))
m_hh_horseshoe_1_sum <- as.data.frame(posterior_summary(m_hh_horseshoe_1, probs = c(0.025, 0.975)))
m_hh_horseshoe_2_sum <- as.data.frame(posterior_summary(m_hh_horseshoe_2, probs = c(0.025, 0.975)))
m_hh_horseshoe_3_sum <- as.data.frame(posterior_summary(m_hh_horseshoe_3, probs = c(0.025, 0.975)))
```

```{r}
# Process
process_model_sum <- function(df, label){
  df$names <- rownames(df)
  df <- filter(df, !(names %in% c("lprior", "lp__")))
  df$names <- factor(df$names, levels = rev(df$names))
  df$label <- label
  
  return(df)
}

m_hh_baseline_sum <- process_model_sum(m_hh_baseline_sum, "Uninformative Normal\nPriors")
m_hh_horseshoe_1_sum <- process_model_sum(m_hh_horseshoe_1_sum, "Regularized Horsehoe Prior (default)")
m_hh_horseshoe_2_sum <- process_model_sum(m_hh_horseshoe_2_sum, "Regularized Horsehoe Prior (par_ratio=0.93)")
m_hh_horseshoe_3_sum <- process_model_sum(m_hh_horseshoe_2_sum, "Regularized Horsehoe\n(par_ratio=0.03)")

m_hh_sum <- rbind(m_hh_baseline_sum, m_hh_horseshoe_1_sum, m_hh_horseshoe_2_sum, m_hh_horseshoe_3_sum)

m_hh_sum <- rbind(m_hh_baseline_sum,
                  m_hh_horseshoe_3_sum)

m_hh_sum <- m_hh_sum %>% 
  mutate(names = str_remove(names, "b_"),
         names = fct_rev(names)) %>%
  filter(names != "Intercept")

ggplot(m_hh_sum, aes(x = Estimate, y = names, group = label, color = label)) +
  geom_point(position = position_dodge(0.5)) +
  geom_errorbar(aes(xmin = Q2.5, xmax = Q97.5), position = position_dodge(0.5)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  ggsci::scale_colour_lancet() +
  labs(x = "Posterior estimate", y = "Variable") +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/poisson-hh-contacts.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```

###### Non-household contacts
For non-household contacts, we use the same regression model except now, the outcome variables are the number of non-household contacts. I argue that we don't need to control for household size because logically, it should not influence the number of non-household contacts given age group and gender.
$$
\begin{split}
Y_i^{nhh} &\sim \text{Poisson}(\lambda_i^{nhh}) \\
\lambda_i^{nhh} &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir}
\end{split}
$$
```{r, echo=FALSE}
# Non-household contacts
m_nhh <- glm(y_nhh ~ age_strata + gender + rep, data = dt_cnt_w4, family = poisson())
summary(m_nhh)
```
We find that repeating participants report $100 \times (1-\exp(-0.39)) = 32$ percent fewer non-household contacts on average compared to first-time participants.


$$
\begin{split}
Y_i^{nhh} &\sim \text{Poisson}(\lambda_i^{nhh}) \\
\lambda_i^{nhh} &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir} + \beta_jD_{ij}
\end{split}
$$
```{r}
# Non-household contacts
m_nhh2 <- glm(y_nhh ~ age_strata + gender + rep + hh_size + job, data = dt_cnt_w4, family = poisson())
summary(m_nhh2)
```
We find that repeating participants report $100 \times (1-\exp(-0.33)) = 28$ percent fewer non-household contacts on average compared to first-time participants.

```{r}
# Non-household contacts
m_nhh3 <- glm(y_nhh ~ age_strata:rep + gender:rep + hh_size:rep + job:rep,
              data = dt_cnt_w4,
              family = poisson())
summary(m_nhh3)
```

```{r}
stan_data <- list(
  N = nrow(X),
  P = ncol(X),
  X = X,
  y = dt_cnt_w4$y_nhh,
  
  hs_df = 1, # local degrees of freedom
  hs_df_global = 1, # global degrees of freedom
  hs_df_slab = 4, # slab degrees of freedom
  hs_scale_global = 0.03, # global prior scale
  hs_scale_slab = 2 # slab prior scale
)

# Compile stan model
m_re_horseshoe <- cmdstan_model("../stan_models/re_horseshoe.stan")

# fit
fit_nhh_re_horseshoe <- m_re_horseshoe$sample(data = stan_data,
                                              seed = 123,
                                              chains = 4,
                                              iter_warmup = 500,
                                              iter_sampling = 1000)

saveRDS(fit_nhh_re_horseshoe, file = "../stan_fits/nhh_re_horseshoe.rds")
```

```{r}
df_diff_norm <- posterior_diff_quantiles(fit_re_norm)
df_diff_norm$variable <- get_labels(dt_cnt_w4)
df_diff_norm$variable <- factor(df_diff_norm$variable, levels = rev(df_diff_norm$variable))

ylabels <- c(as.character(df_diff_horseshoe$variable[1:16]),
             paste("hh size", seq(1,4)),
             "Employed full-time",
             "Employed part-time",
             "Homemaker full-time",
             "Long-term sick or disabled",
             "Nursery/pre-school",
             "Raised-at-home toddler",
             "Retired",
             "Self employed",
             "Student/Pupil",
             "Unemployed: not looking for job",
             "Unemployed: looking for job")

ggplot(df_diff_norm, aes(x = M, y = variable)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75), color = ic_color_palette[1], linewidth = 1.5) +
  geom_linerange(aes(xmin = CL, xmax = CU), color = ic_color_palette[1]) +
  geom_point(color = ic_color_palette[1], size = 2) +
  geom_point(color = "white", size = 1) +
  scale_y_discrete(labels = rev(ylabels)) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/nhh-re-norm.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```

```{r}
df_diff_horseshoe <- posterior_diff_quantiles(fit_nhh_re_horseshoe)
df_diff_horseshoe$variable <- get_labels(dt_cnt_w4)
df_diff_horseshoe$variable <- factor(df_diff_horseshoe$variable,
                                     levels = rev(df_diff_horseshoe$variable))

ggplot(df_diff_horseshoe, aes(x = M, y = variable)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75), color = ic_color_palette[4], linewidth = 1.5) +
  geom_linerange(aes(xmin = CL, xmax = CU), color = ic_color_palette[4]) +
  geom_point(color = ic_color_palette[4], size = 2) +
  geom_point(color = "white", size = 1) +
  labs(x = expression(beta^{"Diff"})) +
  scale_y_discrete(labels = rev(ylabels)) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/nhh-re-horseshoe.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```

```{r}
df_diff_norm$type <- "Standard normal priors"
df_diff_horseshoe$type <- "Regularised Horseshoe priors"
df_diff <- rbind(df_diff_norm, df_diff_horseshoe)
df_diff$type <- factor(df_diff$type, levels = c("Standard normal priors", "Regularised Horseshoe priors"))

ggplot(df_diff, aes(x = M, y = variable, color = type)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75),
                 linewidth = 1,
                 position = position_dodge(width = 1)) +
  geom_linerange(aes(xmin = CL, xmax = CU),
                 position = position_dodge(width = 1)) +
  geom_point(size = 2, shape = 21, fill = "white", position = position_dodge(width = 1)) +
  labs(x = expression(beta^{"Diff"})) +
  scale_y_discrete(labels = rev(ylabels)) +
  scale_color_manual(values = ic_color_palette[c(1,4)]) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/nhh-re-compare.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```

```{r}
# Baseline model (standard normal priors on the parameters)
m_nhh_baseline <- brm(y_nhh ~ age_strata:rep + gender:rep + hh_size:rep + job:rep,
                  data = dt_cnt_w4,
                  family = poisson(),
                  prior = c(set_prior("normal(0,1)")),
                  chains = 2)

# Weak shrinkage
m_nhh_horseshoe_1 <- brm(y_nhh ~ age_strata*rep + gender*rep + hh_size*rep + job*rep,
                         data = dt_cnt_w4,
                         family = poisson(),
                         prior = c(set_prior("horseshoe(df = 1)")),
                         chains = 2)

# Medium shrinkage
m_nhh_horseshoe_2 <- brm(y_nhh ~ age_strata*rep + gender*rep + hh_size*rep + job*rep,
                         data = dt_cnt_w4,
                         family = poisson(),
                         prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.93)")),
                         chains = 2)

# Strong shrinkage
m_nhh_horseshoe_3 <- brm(y_nhh ~ age_strata:rep + gender:rep + hh_size:rep + job:rep,
                         data = dt_cnt_w4,
                         family = poisson(),
                         prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.03)")),
                         chains = 2)

# Summarise posterior quantities
m_nhh_baseline_sum <- as.data.frame(posterior_summary(m_nhh_baseline, probs = c(0.025, 0.975)))
m_nhh_horseshoe_1_sum <- as.data.frame(posterior_summary(m_nhh_horseshoe_1, probs = c(0.025, 0.975)))
m_nhh_horseshoe_2_sum <- as.data.frame(posterior_summary(m_nhh_horseshoe_2, probs = c(0.025, 0.975)))
m_nhh_horseshoe_3_sum <- as.data.frame(posterior_summary(m_nhh_horseshoe_3, probs = c(0.025, 0.975)))
```

```{r}
posterior_diff_quantiles <- function(fit){
  po_draws <- extract_draws(m_nhh_baseline)
  coeffs <- po_draws$dpars$mu$fe$b
  
  # Extract coefficients for first time estimates
  rep_false <- coeffs[,which(str_detect(colnames(coeffs), "repFALSE"))]
  # Extract coefficients for repeat estimates
  rep_true <- coeffs[,which(str_detect(colnames(coeffs), "repTRUE"))]
  
  # Calculate posterior quantiles for the difference
  mat_diff <- apply(rep_true - rep_false, 2, function(x){quantile(x, probs = c(0.025, 0.5, 0.975))})
  df_diff <- as.data.frame(t(mat_diff))
  df_diff$vars <- rownames(df_diff)
  rownames(df_diff) <- NULL
  colnames(df_diff) <- c("CL", "M", "CU", "vars")
  
  return(df_diff)
}

prepare_labels <- function(data){
  data <- data %>%
    mutate(
      vars = str_remove_all(vars, "b_|repTRUE|:|age_strata|gender"),
      vars = str_remove(vars, "^job"),
      vars = str_replace(vars, "M", "-"),
      vars = str_replace(vars, "D", "/"),
      vars = str_replace(vars, "P$", "+")
    )
  
  levs <- data$vars
  data$vars <- factor(data$vars, levels = rev(levs))
  
  return(data)
}

posterior_diff_quantiles(m_nhh_baseline) %>% prepare_labels()
posterior_diff_quantiles(m_nhh_horseshoe_3) %>% prepare_labels()
```

```{r}
# Process
process_model_sum <- function(df, label){
  df$names <- rownames(df)
  df <- filter(df, !(names %in% c("lprior", "lp__")))
  df$names <- factor(df$names, levels = rev(df$names))
  df$label <- label
  
  return(df)
}

m_nhh_baseline_sum <- process_model_sum(m_nhh_baseline_sum, "Standard Normal\nPriors")
m_nhh_horseshoe_1_sum <- process_model_sum(m_nhh_horseshoe_1_sum, "Regularized Horsehoe\nPrior (default)")
m_nhh_horseshoe_2_sum <- process_model_sum(m_nhh_horseshoe_2_sum, "Regularized Horsehoe\nPrior (par_ratio=0.93)")
m_nhh_horseshoe_3_sum <- process_model_sum(m_nhh_horseshoe_2_sum, "Regularized Horsehoe\n(par_ratio=0.03)")

m_nhh_sum <- rbind(m_nhh_baseline_sum, m_nhh_horseshoe_1_sum, m_nhh_horseshoe_2_sum, m_nhh_horseshoe_3_sum)

m_nhh_sum <- rbind(m_nhh_baseline_sum,
                   m_nhh_horseshoe_3_sum)

m_nhh_sum <- m_nhh_sum %>% 
  mutate(names = str_remove(names, "b_"),
         names = fct_rev(names)) %>%
  filter(names != "Intercept" & str_detect(names, "rep"))

ggplot(m_nhh_sum, aes(x = Estimate, y = names, group = label, color = label)) +
  geom_point(position = position_dodge(0.5)) +
  geom_errorbar(aes(xmin = Q2.5, xmax = Q97.5), position = position_dodge(0.5)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  ggsci::scale_colour_lancet() +
  labs(x = "Posterior estimate", y = "Variable") +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/poisson-nhh-contacts.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```
We place various assumptions on the number of non-zero coefficients (effective number of coefficients), but despite strong assumptions of sparsity, almost all parameters escape shrinkage, indicating that we have a strong signal.

###### Group contacts
If we wanted to examine the effects of fatigue on group contacts, I argue that it is not very meaningful to look at the counts as they vary tremndously depending on the individual. Instead, we can look at the likelihood of reporting group contacts by performing logistic regression on a binary variable, indicating whether they reported group contacts or not. We include the same terms as the Poisson regressions above.
$$
\begin{split}
Z_i^{grp} &\sim \text{Binomial}(\pi^{grp}) \\
\text{logit}(\pi^{grp}) &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir}
\end{split}
$$
```{r, echo=FALSE}
# Group contacts
dt_cnt_w4 <- dt_cnt_w4 %>% mutate(z = ifelse(y_grp > 0, 1, 0))

m_grp <- glm(z ~ age_strata + gender + rep, data = dt_cnt_w4, family = binomial())
kable(tidy(m_grp))
```
The odds ratio of reporting a group contact between repeating participants and first-time participant is $\exp(\beta_r) = 0.38$ which suggest that the odds of reporting a group contact is 62 percent smaller in the repeating group compared to the first-time group when adjusting for age and gender.

> We can also construct a model which includes employment status, as it may be a important predictor of group contacts

$$
\begin{split}
Z_i^{grp} &\sim \text{Binomial}(\pi^{grp}) \\
\text{logit}(\pi^{grp}) &= \alpha + \sum_{c\in\mathcal{C}/\text{0-4}}\beta_cD_{ic} + \beta_{F}D_{iF} + \beta_rD_{ir} + \sum_{j \in \mathcal{J}}\beta_jD_{ij}
\end{split}
$$
```{r, echo=FALSE}
m_grp2 <- glm(z ~ age_strata + gender + rep + job, data = dt_cnt_w4, family = binomial())
kable(tidy(m_grp2))
```
We see that adjusting for employment status slightly reduced the negative effect of repeated participation (0.12 increase in $\beta_r$). However, the effect is still significantly negative, which suggests reporting fatigue effects in the reporting pattern of group contacts.

```{r}
stan_data <- list(
  N = nrow(X),
  P = ncol(X),
  X = X,
  y = as.numeric(dt_cnt_w4$y_grp > 0),
  
  hs_df = 1, # local degrees of freedom
  hs_df_global = 1, # global degrees of freedom
  hs_df_slab = 4, # slab degrees of freedom
  hs_scale_global = 0.1, # global prior scale
  hs_scale_slab = 2 # slab prior scale
)

# Compile stan model
m_logit_re_norm <- cmdstan_model("../stan_models/logit_re_norm.stan")
m_logit_re_horseshoe <- cmdstan_model("../stan_models/logit_re_horseshoe.stan")

# fit
fit_grp_re_norm <- m_logit_re_norm$sample(data = stan_data,
                                          seed = 123,
                                          chains = 4,
                                          iter_warmup = 500,
                                          iter_sampling = 1000)
fit_grp_re_horseshoe <- m_logit_re_horseshoe$sample(data = stan_data,
                                                    seed = 123,
                                                    chains = 4,
                                                    iter_warmup = 500,
                                                    iter_sampling = 1000)
```

```{r}
df_diff_norm <- posterior_diff_quantiles(fit_grp_re_norm)
df_diff_norm$variable <- get_labels(dt_cnt_w4)
df_diff_norm$variable <- factor(df_diff_norm$variable,
                                     levels = rev(df_diff_norm$variable))

ggplot(df_diff_norm, aes(x = M, y = variable)) +
  geom_point() +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75), color = ic_color_palette[4], linewidth = 1.5) +
  geom_linerange(aes(xmin = CL, xmax = CU), color = ic_color_palette[4]) +
  geom_point(color = ic_color_palette[4], size = 2) +
  geom_point(color = "white", size = 1) +
  scale_y_discrete(labels = rev(ylabels)) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )
```

```{r}
df_diff_horseshoe <- posterior_diff_quantiles(fit_grp_re_horseshoe)
df_diff_horseshoe$variable <- get_labels(dt_cnt_w4)
df_diff_horseshoe$variable <- factor(df_diff_horseshoe$variable,
                                     levels = rev(df_diff_horseshoe$variable))

ggplot(df_diff_horseshoe, aes(x = M, y = variable)) +
  geom_point() +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75), color = ic_color_palette[4], linewidth = 1.5) +
  geom_linerange(aes(xmin = CL, xmax = CU), color = ic_color_palette[4]) +
  geom_point(color = ic_color_palette[4], size = 2) +
  geom_point(color = "white", size = 1) +
  scale_y_discrete(labels = rev(ylabels)) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/grp-re-horseshoe.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```

```{r}
df_diff_norm$type <- "Standard normal priors"
df_diff_horseshoe$type <- "Regularised Horseshoe priors"
df_diff <- rbind(df_diff_norm, df_diff_horseshoe)
df_diff$type <- factor(df_diff$type, levels = c("Standard normal priors", "Regularised Horseshoe priors"))

ggplot(df_diff, aes(x = M, y = variable, color = type)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  geom_linerange(aes(xmin = Q25, xmax = Q75),
                 linewidth = 1,
                 position = position_dodge(width = 1)) +
  geom_linerange(aes(xmin = CL, xmax = CU),
                 position = position_dodge(width = 1)) +
  geom_point(size = 2, shape = 21, fill = "white", position = position_dodge(width = 1)) +
  labs(x = expression(beta^{"Diff"})) +
  scale_y_discrete(labels = rev(ylabels)) +
  scale_color_manual(values = ic_color_palette[c(1,4)]) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/grp-re-compare.pdf", units = "cm", width = 14.26, height = 12, dpi = 300)
```


```{r}
# Baseline model (standard normal priors on the parameters)
m_grp_baseline <- brm(y_grp ~ age_strata + gender + hh_size + job + rep,
                  data = dt_cnt_w4,
                  family = binomial(),
                  prior = c(set_prior("normal(0, 1)")),
                  chains = 2)

# Weak shrinkage
m_grp_horseshoe_1 <- brm(y_grp ~ age_strata + gender + rep + hh_size + job,
                         data = dt_cnt_w4,
                         family = binomial(),
                         prior = c(set_prior("horseshoe(df = 1)")),
                         chains = 2)

# Medium shrinkage
m_grp_horseshoe_2 <- brm(y_grp ~ age_strata + gender + rep + hh_size + job,
                         data = dt_cnt_w4,
                         family = binomial(),
                         prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.93)")),
                         chains = 2)

# Strong shrinkage
m_grp_horseshoe_3 <- brm(y_grp ~ age_strata + gender + rep + hh_size + job,
                         data = dt_cnt_w4,
                         family = binomial(),
                         prior = c(set_prior("horseshoe(df = 1, par_ratio = 0.03)", )),
                         chains = 2)

# Summarise posterior quantities
m_grp_baseline_sum <- as.data.frame(posterior_summary(m_grp_baseline, probs = c(0.025, 0.975)))
m_grp_horseshoe_1_sum <- as.data.frame(posterior_summary(m_grp_horseshoe_1, probs = c(0.025, 0.975)))
m_grp_horseshoe_2_sum <- as.data.frame(posterior_summary(m_grp_horseshoe_2, probs = c(0.025, 0.975)))
m_grp_horseshoe_3_sum <- as.data.frame(posterior_summary(m_grp_horseshoe_3, probs = c(0.025, 0.975)))
```

```{r}
m_grp_baseline_sum <- process_model_sum(m_grp_baseline_sum, "Standard Normal\nPriors")
m_grp_horseshoe_1_sum <- process_model_sum(m_grp_horseshoe_1_sum, "Regularized Horsehoe Prior (default)")
m_grp_horseshoe_2_sum <- process_model_sum(m_grp_horseshoe_2_sum, "Regularized Horsehoe Prior (par_ratio=0.93)")
m_grp_horseshoe_3_sum <- process_model_sum(m_grp_horseshoe_2_sum, "Regularized Horsehoe\n(par_ratio=0.03)")

m_grp_sum <- rbind(m_grp_baseline_sum,
                   m_grp_horseshoe_3_sum)

m_grp_sum <- m_nhh_sum %>% 
  mutate(names = str_remove(names, "b_"),
         names = fct_rev(names)) %>%
  filter(names != "Intercept")

ggplot(m_grp_sum, aes(x = Estimate, y = names, group = label, color = label)) +
  geom_point(position = position_dodge(0.5)) +
  geom_errorbar(aes(xmin = Q2.5, xmax = Q97.5), position = position_dodge(0.5)) +
  geom_vline(aes(xintercept = 0), linetype = "dashed") +
  ggsci::scale_colour_lancet() +
  labs(x = "Posterior estimate", y = "Variable") +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.margin = margin(t = -0.2, unit = "cm")
  )

ggsave("../figures/logit-grp-contacts.pdf", units = "cm", width = 14.26, height = 12)
```
